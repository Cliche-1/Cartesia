package pages

templ RegisterForm() {
	<div
		x-data="{
			username: '',
			email: '',
			password: '',
			confirmPassword: '',
			loading: false,
			error: '',
			errors: {
				username: '',
				email: '',
				password: '',
				confirmPassword: ''
			},
			validateUsername() {
				if (this.username.length < 3) {
					this.errors.username = 'El usuario debe tener al menos 3 caracteres'
					return false
				}
				if (this.username.length > 30) {
					this.errors.username = 'El usuario no puede tener más de 30 caracteres'
					return false
				}
				if (!/^[a-zA-Z0-9_]+$/.test(this.username)) {
					this.errors.username = 'El usuario solo puede contener letras, números y guiones bajos'
					return false
				}
				this.errors.username = ''
				return true
			},
			validateEmail() {
				if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(this.email)) {
					this.errors.email = 'Email inválido'
					return false
				}
				this.errors.email = ''
				return true
			},
			validatePassword() {
				if (this.password.length < 8) {
					this.errors.password = 'La contraseña debe tener al menos 8 caracteres'
					return false
				}
				this.errors.password = ''
				return true
			},
			validateConfirmPassword() {
				if (this.password !== this.confirmPassword) {
					this.errors.confirmPassword = 'Las contraseñas no coinciden'
					return false
				}
				this.errors.confirmPassword = ''
				return true
			},
			validate() {
				return this.validateUsername() &&
					this.validateEmail() &&
					this.validatePassword() &&
					this.validateConfirmPassword()
			},
			async submit() {
				if (!this.validate()) {
					return
				}
				
				this.loading = true
				this.error = ''
				
				try {
					const res = await fetch('/auth/register', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json',
						},
						body: JSON.stringify({
							username: this.username,
							email: this.email,
							password: this.password,
						}),
					})
					
					const data = await res.json()
					
					if (!res.ok) {
						throw new Error(data.message || 'Error al registrar usuario')
					}
					
					// Guardar token
					localStorage.setItem('token', data.token)
					
					// Redireccionar
					window.location.href = '/dashboard'
				} catch (err) {
					this.error = err.message
				} finally {
					this.loading = false
				}
			}
		}"
		class="w-full max-w-md mx-auto space-y-6"
	>
		<!-- Título -->
		<div class="text-center">
			<h2 class="text-2xl font-bold text-gray-900 dark:text-white">
				Crear una cuenta
			</h2>
			<p class="mt-2 text-sm text-gray-600 dark:text-gray-400">
				¿Ya tienes una cuenta?
				<a href="/login" class="font-medium text-primary-600 hover:text-primary-500">
					Inicia sesión
				</a>
			</p>
		</div>

		<!-- Botón de Google -->
		<div>
			<a
				href="/auth/google/login"
				class="w-full flex items-center justify-center gap-3 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm bg-white dark:bg-gray-800 text-sm font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
			>
				<svg class="h-5 w-5" viewBox="0 0 24 24">
					<path
						fill="currentColor"
						d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"
						fill="#4285F4"
					/>
					<path
						fill="currentColor"
						d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"
						fill="#34A853"
					/>
					<path
						fill="currentColor"
						d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"
						fill="#FBBC05"
					/>
					<path
						fill="currentColor"
						d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"
						fill="#EA4335"
					/>
				</svg>
				<span>Continuar con Google</span>
			</a>
		</div>

		<!-- Separador -->
		<div class="relative">
			<div class="absolute inset-0 flex items-center">
				<div class="w-full border-t border-gray-300 dark:border-gray-600"></div>
			</div>
			<div class="relative flex justify-center text-sm">
				<span class="px-2 bg-white dark:bg-gray-800 text-gray-500 dark:text-gray-400">
					O regístrate con email
				</span>
			</div>
		</div>

		<form @submit.prevent="submit" class="space-y-4">
			<!-- Username -->
			<div>
				<label for="username" class="block text-sm font-medium text-gray-700 dark:text-gray-200">
					Usuario
				</label>
				<div class="mt-1 relative">
					<input
						type="text"
						id="username"
						x-model="username"
						@blur="validateUsername"
						required
						class="block w-full px-4 py-2 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:focus:ring-primary-500 dark:focus:border-primary-500"
						:class="{'border-red-500': errors.username}"
					/>
				</div>
				<p
					x-show="errors.username"
					x-text="errors.username"
					class="mt-1 text-sm text-red-600 dark:text-red-400"
				></p>
			</div>

			<!-- Email -->
			<div>
				<label for="register-email" class="block text-sm font-medium text-gray-700 dark:text-gray-200">
					Email
				</label>
				<div class="mt-1 relative">
					<input
						type="email"
						id="register-email"
						x-model="email"
						@blur="validateEmail"
						required
						class="block w-full px-4 py-2 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:focus:ring-primary-500 dark:focus:border-primary-500"
						:class="{'border-red-500': errors.email}"
					/>
				</div>
				<p
					x-show="errors.email"
					x-text="errors.email"
					class="mt-1 text-sm text-red-600 dark:text-red-400"
				></p>
			</div>

			<!-- Password -->
			<div>
				<label for="register-password" class="block text-sm font-medium text-gray-700 dark:text-gray-200">
					Contraseña
				</label>
				<div class="mt-1 relative">
					<input
						type="password"
						id="register-password"
						x-model="password"
						@blur="validatePassword"
						required
						class="block w-full px-4 py-2 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:focus:ring-primary-500 dark:focus:border-primary-500"
						:class="{'border-red-500': errors.password}"
					/>
					<div class="absolute inset-y-0 right-0 pr-3 flex items-center">
						<button
							type="button"
							@click="$el.previousElementSibling.type = $el.previousElementSibling.type === 'password' ? 'text' : 'password'"
							class="text-gray-400 hover:text-gray-500 focus:outline-none"
						>
							<svg
								class="h-5 w-5"
								xmlns="http://www.w3.org/2000/svg"
								viewBox="0 0 20 20"
								fill="currentColor"
							>
								<path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
								<path
									fill-rule="evenodd"
									d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z"
									clip-rule="evenodd"
								></path>
							</svg>
						</button>
					</div>
				</div>
				<p
					x-show="errors.password"
					x-text="errors.password"
					class="mt-1 text-sm text-red-600 dark:text-red-400"
				></p>
			</div>

			<!-- Confirm Password -->
			<div>
				<label for="confirm-password" class="block text-sm font-medium text-gray-700 dark:text-gray-200">
					Confirmar Contraseña
				</label>
				<div class="mt-1 relative">
					<input
						type="password"
						id="confirm-password"
						x-model="confirmPassword"
						@blur="validateConfirmPassword"
						required
						class="block w-full px-4 py-2 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:focus:ring-primary-500 dark:focus:border-primary-500"
						:class="{'border-red-500': errors.confirmPassword}"
					/>
					<div class="absolute inset-y-0 right-0 pr-3 flex items-center">
						<button
							type="button"
							@click="$el.previousElementSibling.type = $el.previousElementSibling.type === 'password' ? 'text' : 'password'"
							class="text-gray-400 hover:text-gray-500 focus:outline-none"
						>
							<svg
								class="h-5 w-5"
								xmlns="http://www.w3.org/2000/svg"
								viewBox="0 0 20 20"
								fill="currentColor"
							>
								<path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
								<path
									fill-rule="evenodd"
									d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z"
									clip-rule="evenodd"
								></path>
							</svg>
						</button>
					</div>
				</div>
				<p
					x-show="errors.confirmPassword"
					x-text="errors.confirmPassword"
					class="mt-1 text-sm text-red-600 dark:text-red-400"
				></p>
			</div>

			<!-- Error message -->
			<div
				x-show="error"
				x-transition
				class="rounded-md bg-red-50 dark:bg-red-900/50 p-4"
			>
				<div class="flex">
					<div class="flex-shrink-0">
						<svg
							class="h-5 w-5 text-red-400"
							xmlns="http://www.w3.org/2000/svg"
							viewBox="0 0 20 20"
							fill="currentColor"
						>
							<path
								fill-rule="evenodd"
								d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
								clip-rule="evenodd"
							></path>
						</svg>
					</div>
					<div class="ml-3">
						<p x-text="error" class="text-sm text-red-700 dark:text-red-200"></p>
					</div>
				</div>
			</div>

			<!-- Submit button -->
			<div>
				<button
					type="submit"
					:disabled="loading"
					class="w-full flex justify-center py-2 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed"
				>
					<svg
						x-show="loading"
						class="animate-spin -ml-1 mr-3 h-5 w-5 text-white"
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 24 24"
					>
						<circle
							class="opacity-25"
							cx="12"
							cy="12"
							r="10"
							stroke="currentColor"
							stroke-width="4"
						></circle>
						<path
							class="opacity-75"
							fill="currentColor"
							d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
						></path>
					</svg>
					<span x-text="loading ? 'Registrando...' : 'Registrarse'"></span>
				</button>
			</div>
		</form>
	</div>
}