package pages

import "Gin/views/components"
import "Gin/views/layouts"

type ExplorePageProps struct {
	Roadmaps []components.RoadmapCardProps
	Filters  components.FiltersSidebarProps
}

templ exploreContent(props ExplorePageProps) {
	<div class="min-h-screen bg-gray-50 dark:bg-gray-900 py-8 px-4 sm:px-6 lg:px-8">
		<div class="max-w-7xl mx-auto">
			// Encabezado
			<div class="text-center mb-8">
				<h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
					Explorar Roadmaps
				</h1>
				<p class="text-xl text-gray-600 dark:text-gray-400">
					Descubre roadmaps creados por la comunidad para aprender nuevas habilidades
				</p>
			</div>

			// Barra de búsqueda
			<div class="max-w-2xl mx-auto mb-8">
				<div class="relative">
					<input
						type="text"
						placeholder="Buscar roadmaps..."
						class="w-full px-4 py-3 text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
						hx-get="/api/roadmaps/search"
						hx-trigger="keyup changed delay:500ms"
						hx-target="#roadmaps-grid"
						hx-swap="innerHTML"
					/>
					<svg
						class="absolute right-3 top-3 w-6 h-6 text-gray-400"
						fill="none"
						stroke="currentColor"
						viewBox="0 0 24 24"
					>
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
					</svg>
				</div>
			</div>

			// Contenedor principal con grid y sidebar
			<div class="flex flex-col lg:flex-row gap-8">
				// Sidebar de filtros
				<div class="lg:w-64 flex-shrink-0">
					@components.FiltersSidebar(props.Filters)
				</div>

				// Grid de roadmaps
				<div class="flex-1">
					<div
						id="roadmaps-grid"
						class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6"
						hx-get="/api/roadmaps"
						hx-trigger="load"
						hx-swap="innerHTML"
					>
						// Mostrar skeleton loaders mientras carga
						if len(props.Roadmaps) == 0 {
							for i := 0; i < 6; i++ {
								@components.RoadmapCardSkeleton()
							}
						} else {
							for _, roadmap := range props.Roadmaps {
								@components.RoadmapCard(roadmap)
							}
						}
					</div>

					// Botón "Cargar más"
					if len(props.Roadmaps) > 0 {
						<div class="text-center mt-8">
							<button
								class="px-6 py-3 bg-blue-600 text-white rounded-lg font-medium shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-200"
								hx-get="/api/roadmaps?page=2"
								hx-target="#roadmaps-grid"
								hx-swap="beforeend"
								hx-trigger="click"
							>
								Cargar más roadmaps
							</button>
						</div>
					}
				</div>
			</div>
		</div>
	</div>
}

templ ExplorePage(props ExplorePageProps) {
	@layouts.Base("Explorar Roadmaps - Cartesia", templ.Component(exploreContent(props)))
}