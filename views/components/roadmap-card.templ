package components

import "fmt"

type AuthorProps struct {
	ID        string
	Name      string
	AvatarURL string
}

type StatsProps struct {
	Views   int
	Rating  float64
	Reviews int
}

type RoadmapCardProps struct {
	ID          string
	Title       string
	Description string
	ImageURL    string
	Author      AuthorProps
	Stats       StatsProps
	Tags        []string
}

templ RoadmapCard(props RoadmapCardProps) {
	<div class="group relative bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden transition-all duration-300 hover:shadow-xl hover:-translate-y-1">
		// Imagen de fondo con gradiente
		<div class="relative h-48 bg-gradient-to-br from-blue-500 to-purple-600">
			if props.ImageURL != "" {
				<img
					src={ props.ImageURL }
					alt={ props.Title }
					class="absolute inset-0 w-full h-full object-cover mix-blend-overlay opacity-50"
				/>
			}
		</div>

		// Contenido principal
		<div class="p-6">
			<h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-2 line-clamp-2">
				{ props.Title }
			</h3>
			<p class="text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-2">
				{ props.Description }
			</p>

			// Tags
			<div class="flex flex-wrap gap-2 mb-4">
				for _, tag := range props.Tags {
					<span class="px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200 rounded-full">
						{ tag }
					</span>
				}
			</div>

			// Autor y stats
			<div class="flex items-center justify-between">
				<div class="flex items-center space-x-3">
					<img
						src={ props.Author.AvatarURL }
						alt={ props.Author.Name }
						class="w-8 h-8 rounded-full"
					/>
					<span class="text-sm font-medium text-gray-700 dark:text-gray-300">
						{ props.Author.Name }
					</span>
				</div>

				<div class="flex items-center space-x-4 text-sm text-gray-500 dark:text-gray-400">
					<div class="flex items-center">
						<svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
						</svg>
						{ props.Stats.Views }
					</div>
					<div class="flex items-center">
						<svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
							<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
						</svg>
						{ fmt.Sprintf("%.1f", props.Stats.Rating) }
					</div>
				</div>
			</div>

			// Botón Ver Roadmap
			<a
				href={ templ.SafeURL("/roadmap/" + props.ID) }
				class="mt-4 block w-full text-center px-4 py-2 bg-blue-600 text-white rounded-md font-medium transition-colors duration-200 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
			>
				Ver Roadmap
			</a>
		</div>

		// Skeleton loader
		<div
			class="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -translate-x-full animate-[shimmer_2s_infinite] skeleton-loader opacity-0 group-[.loading]:opacity-100"
		></div>
	</div>
}

// Skeleton loader para cuando está cargando
templ RoadmapCardSkeleton() {
	<div class="relative bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden loading">
		<div class="h-48 bg-gray-200 dark:bg-gray-700 animate-pulse"></div>
		<div class="p-6">
			<div class="h-6 bg-gray-200 dark:bg-gray-700 rounded w-3/4 mb-2 animate-pulse"></div>
			<div class="h-4 bg-gray-200 dark:bg-gray-700 rounded w-full mb-4 animate-pulse"></div>
			<div class="flex flex-wrap gap-2 mb-4">
				<div class="h-6 bg-gray-200 dark:bg-gray-700 rounded-full w-16 animate-pulse"></div>
				<div class="h-6 bg-gray-200 dark:bg-gray-700 rounded-full w-20 animate-pulse"></div>
				<div class="h-6 bg-gray-200 dark:bg-gray-700 rounded-full w-24 animate-pulse"></div>
			</div>
			<div class="flex items-center justify-between mb-4">
				<div class="flex items-center space-x-3">
					<div class="w-8 h-8 bg-gray-200 dark:bg-gray-700 rounded-full animate-pulse"></div>
					<div class="h-4 bg-gray-200 dark:bg-gray-700 rounded w-24 animate-pulse"></div>
				</div>
				<div class="flex items-center space-x-4">
					<div class="h-4 bg-gray-200 dark:bg-gray-700 rounded w-12 animate-pulse"></div>
					<div class="h-4 bg-gray-200 dark:bg-gray-700 rounded w-12 animate-pulse"></div>
				</div>
			</div>
			<div class="h-10 bg-gray-200 dark:bg-gray-700 rounded-md w-full animate-pulse"></div>
		</div>
	</div>
}